{"version":3,"sources":["Welcome.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","className","Footer","href","alt","src","App","useState","price","setPrice","qty","setQty","currentPrice","setCurrentPrice","output","setOutput","background","setBackGround","myStyles","backgroundImage","backgroundSize","backgroundRepeat","useEffect","fetch","method","headers","then","response","console","log","catch","err","error","style","onChange","e","target","value","type","onClick","totalPrice","profit","percetage","Math","abs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAYeA,EAVC,WACd,OACE,qBAAKC,UAAU,UAAf,2CCmBWC,EArBA,WACb,OACE,sBAAKD,UAAU,SAAf,UAEE,mBAAGE,KAAK,oCAAR,SACE,qBACEC,IAAI,OACJC,IAAI,mFAGR,mBAAGF,KAAK,sCAAR,SACE,qBACEC,IAAI,OACJC,IAAI,mFCmFCC,MA7Ff,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,OAESF,qBAFT,mBAENG,EAFM,KAEDC,EAFC,OAG2BJ,qBAH3B,mBAGNK,EAHM,KAGQC,EAHR,OAIeN,qBAJf,mBAINO,EAJM,KAIEC,EAJF,OAKuBR,mBAAS,gCALhC,mBAKNS,EALM,KAKMC,EALN,KAYPC,EAAW,CACfC,gBAAiB,OAASH,EAAa,IACvCI,eAAgB,QAChBC,iBAAkB,aAsDpB,OAnDAC,qBAAU,WACRC,MAAM,6CAA8C,CAClDC,OAAQ,MACRC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,0BAGpBC,MAAK,SAACC,GACLC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNH,QAAQI,MAAMD,QAEjB,IAsCD,qCACA,cAAC,EAAD,IACA,sBAAK9B,UAAU,YAAYgC,MAAOf,EAAlC,UACE,gDACA,uBAAOgB,SAnEX,SAAsBC,GAEpB1B,EAAS0B,EAAEC,OAAOC,QAiEeC,KAAK,WACpC,uBACA,mDACA,uBAAOJ,SAAU,SAACC,GAAD,OAAOxB,EAAOwB,EAAEC,OAAOC,QAAQC,KAAK,WACrD,uBACA,gDACA,uBACEJ,SAAU,SAACC,GAAD,OAAOtB,EAAgBsB,EAAEC,OAAOC,QAC1CC,KAAK,WAEP,uBACA,wBAAQC,QApDZ,WACE,GAAI/B,EAAQ,GAAKE,EAAM,GAAKE,EAAc,CACxC,IAAI4B,EAAahC,EAAQE,EAErB+B,EADoB7B,EAAeF,EACN8B,EACjCZ,QAAQC,IAAIY,GAEZ,IAAIC,EAAaD,EAASD,EAAc,IACxCZ,QAAQC,IAAIa,GAERD,EAAS,GACXxB,EAAc,+BACdF,EACE,uDACwB0B,EADxB,6BAC0DC,EAAW,IADrE,8BAEU,SAGHD,EAAS,GAClBxB,EAAc,+BACdF,EACE,kDACmB4B,KAAKC,IAAIH,GAD5B,0BAC4D,IACzDE,KAAKC,IAAIF,GAFZ,oCAKkB,IAAXD,GACT1B,EAAU,yEAGZA,EAAU,wDAsBV,mBACA,mBAAGd,UAAU,SAAb,SAAuBa,OAEzB,cAAC,EAAD,QCjFW+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1527b848.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <div className=\"welcome\">\r\n      Welcome to stock calculator!\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n        \r\n      <a href=\"https://github.com/vijaytembugade\">\r\n        <img\r\n          alt=\"logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/9/91/Octicons-mark-github.svg\"\r\n        />\r\n      </a>\r\n      <a href=\"https://twitter.com/vijay_tembugade\">\r\n        <img\r\n          alt=\"logo\"\r\n          src=\"https://logodownload.org/wp-content/uploads/2014/09/twitter-logo-2-1.png\"\r\n        />\r\n      </a>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Welcome from \"./Welcome\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  const [price, setPrice] = useState();\n  const [qty, setQty] = useState();\n  const [currentPrice, setCurrentPrice] = useState();\n  const [output, setOutput] = useState();\n  const [background, setBackGround] = useState(\"https://i.gifer.com/7D7o.gif\");\n\n  function priceHandler(e) {\n    // console.log(e.target.value)\n    setPrice(e.target.value);\n  }\n\n  const myStyles = {\n    backgroundImage: \"url(\" + background + \")\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  useEffect(() => {\n    fetch(\"https://zirra.p.rapidapi.com/v1/timeseries\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"4166e9b862mshe2783ddb960d6dep127a94jsnb949cc04dc69\",\n        \"x-rapidapi-host\": \"zirra.p.rapidapi.com\",\n      },\n    })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  function handleCheck() {\n    if (price > 0 && qty > 0 && currentPrice) {\n      var totalPrice = price * qty;\n      var currentTotalPrice = currentPrice * qty;\n      var profit = currentTotalPrice - totalPrice;\n      console.log(profit);\n\n      let percetage = (profit / totalPrice) * 100;\n      console.log(percetage);\n\n      if (profit > 0) {\n        setBackGround(\"https://i.gifer.com/oNW.gif\");\n        setOutput(\n          <h4>\n            Congrates ! You made {profit} Rs profit. Total gain is {percetage}{\" \"}\n            %. ðŸ˜ŽðŸ˜Ž{\" \"}\n          </h4>\n        );\n      } else if (profit < 0) {\n        setBackGround(\"https://i.gifer.com/XZ9.gif\");\n        setOutput(\n          <h4>\n            Awww ! You made {Math.abs(profit)} Rs loss. Total loss is{\" \"}\n            {Math.abs(percetage)} %. ðŸ˜¢ðŸ˜¢\n          </h4>\n        );\n      } else if (profit === 0) {\n        setOutput(<h4>You have done no profit no loss!!</h4>);\n      }\n    } else {\n      setOutput(<h4>Invalid Input values</h4>);\n    }\n  }\n\n  // console.log(price)\n  // console.log(qty, currentPrice)\n  return (\n    <>\n    <Welcome/>\n    <div className=\"container\" style={myStyles}>\n      <h3>Perchase Price</h3>\n      <input onChange={priceHandler} type=\"number\"></input>\n      <br />\n      <h3>Quantity of Stock</h3>\n      <input onChange={(e) => setQty(e.target.value)} type=\"number\"></input>\n      <br />\n      <h3>Current Price </h3>\n      <input\n        onChange={(e) => setCurrentPrice(e.target.value)}\n        type=\"number\"\n      ></input>\n      <br />\n      <button onClick={handleCheck}>Check</button>\n      <p className=\"output\">{output}</p>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}